// Actualizar el explorador si el comando afecta a archivos
                            if (shouldRefreshExplorer(data.command)) {
                                setTimeout(() => loadDirectoryContents(currentDirectory), 500);
                            }

                            // Actualizar preview en ciertos comandos
                            if (data.command.includes('touch') || data.command.includes('echo') || 
                                data.command.includes('cat') || data.command.includes('npm')) {
                                updatePreviewIframe('/preview');
                            }

                            // Actualizar directorio actual si es comando cd
                            if (data.command.startsWith('cd ')) {
                                updateCurrentDirectory(data);
                            }
                        } else {
                            terminal.write('\r\n\x1b[31mError: ' + data.stderr + '\x1b[0m\r\n');
                        }
                    });

                    socket.on('directory_contents', function(data) {
                        console.log('Contenido del directorio recibido:', data);

                        if (data.success) {
                            updateExplorer(data.path, data.contents);
                        } else {
                            showNotification('Error al cargar archivos: ' + data.error, 'error');
                        }
                    });

                    socket.on('file_change', function(data) {
                        console.log('Cambio en archivos detectado:', data);
                        showNotification(data.message, 'info');
                        loadDirectoryContents(currentDirectory);

                        // Actualizar preview si se ha modificado un archivo
                        updatePreviewIframe('/preview');
                    });

                    socket.on('error', function(error) {
                        console.error('Error de WebSocket:', error);
                        terminal.write('\r\n\x1b[31mError: ' + error + '\x1b[0m\r\n');
                    });

                } catch (e) {
                    console.error('Error al inicializar WebSocket:', e);
                    terminal.write('\r\n\x1b[31mError al inicializar la conexión: ' + e.message + '\x1b[0m\r\n');
                    updateConnectionStatus('disconnected');
                }
            }

            // Determinar si un comando debería actualizar el explorador
            function shouldRefreshExplorer(command) {
                const refreshCommands = ['mkdir', 'touch', 'rm', 'cp', 'mv', 'git', 'echo', 'npm'];
                return refreshCommands.some(cmd => command.startsWith(cmd));
            }

       