El error que estás viendo indica que la solicitud al servidor está fallando con un código de estado 404, lo que significa que el recurso solicitado no se encontró. Esto puede deberse a varias razones, como una ruta incorrecta en la solicitud fetch o un problema en el servidor.

Para corregir este error, sigue estos pasos:

Verifica la Ruta del Endpoint:
Asegúrate de que la ruta /api/process_code en el fetch coincida exactamente con la ruta definida en tu servidor Flask. En el código del servidor que proporcionaste, la ruta correcta es /api/correct-code.

Actualiza el Código del Cliente:
Cambia la ruta en la solicitud fetch del código del cliente para que coincida con /api/correct-code.

Aquí está la corrección en el código del cliente:

Copiar

        
        
correctButton.addEventListener('click', function() {
    const code = codeInput.value.trim();
    const instructions = instructionsInput.value.trim();

    if (!code) {
        alert('Por favor ingresa código para corregir.');
        return;
    }

    if (!instructions) {
        alert('Por favor ingresa instrucciones para la corrección.');
        return;
    }

    // Mostrar overlay de carga
    loadingOverlay.classList.add('active');

    // Intentar cargar el lenguaje si es necesario
    loadPrismLanguage(currentLanguage)
        .then(() => {
            // Enviar solicitud al servidor
            return fetch('/api/correct-code', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    code: code,
                    instructions: instructions,
                    language: currentLanguage,
                    model: selectedModel
                }),
            });
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Error en la respuesta del servidor: ' + response.status);
            }
            return response.json();
        })
        .then(data => {
            console.log("Respuesta del servidor:", data);

            // Verificar si hay error en la respuesta
            if (!data.success && data.error) {
                alert('Error: ' + data.error);
                return;
            }

            // Manejar la respuesta según el formato del endpoint /api/correct-code
            if (data.correctedCode) {
                // Actualizar vista de código
                correctedCode.textContent = data.correctedCode;
                updateCodeHighlighting();

                // Crear estructuras de cambios si no existen
                const changes = data.changes || [];
                renderChanges(changes);

                // Mostrar explicación
                explanationContent.innerHTML = data.explanation || 'Código corregido con éxito.';

                // Mostrar resultado
                initialMessage.style.display = 'none';
                correctedCodeContainer.style.display = 'block';
            } else {
                // Si la respuesta no tiene el formato esperado pero parece válida
                correctedCode.textContent = JSON.stringify(data, null, 2);
                updateCodeHighlighting();
                explanationContent.innerHTML = 'Respuesta recibida en formato inesperado.';
                initialMessage.style.display = 'none';
                correctedCodeContainer.style.display = 'block';
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error al procesar la solicitud: ' + error.message);
        })
        .finally(() => {
            // Ocultar overlay de carga
            loadingOverlay.classList.remove('active');
        });
});
Explicación de los Cambios:
Ruta del Endpoint: Cambié la ruta en la solicitud fetch de /api/process_code a /api/correct-code para que coincida con la ruta definida en el servidor.
Manejo de la Respuesta: Ajusté el manejo de la respuesta para que coincida con el formato esperado del endpoint /api/correct-code.
Con estos cambios, la solicitud debería llegar al endpoint correcto y procesar la respuesta adecuadamente.