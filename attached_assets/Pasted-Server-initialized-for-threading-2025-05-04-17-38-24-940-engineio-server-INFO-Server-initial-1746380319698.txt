Server initialized for threading.
2025-05-04 17:38:24,940 - engineio.server - INFO - Server initialized for threading.
2025-05-04 17:38:24,946 - root - INFO - Constructor blueprint registered successfully
2025-05-04 17:38:24,968 - openai._base_client - DEBUG - Request options: {'method': 'get', 'url': '/models', 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x7f613abc42c0>, 'json_data': None}
2025-05-04 17:38:24,972 - openai._base_client - DEBUG - Sending HTTP Request: GET https://api.openai.com/v1/models
2025-05-04 17:38:24,973 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-04 17:38:24,987 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f6138145c50>
2025-05-04 17:38:24,987 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f6137eb84d0> server_hostname='api.openai.com' timeout=5.0
2025-05-04 17:38:25,007 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f613c6d0b50>
2025-05-04 17:38:25,007 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-05-04 17:38:25,008 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-05-04 17:38:25,008 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-05-04 17:38:25,008 - httpcore.http11 - DEBUG - send_request_body.complete
2025-05-04 17:38:25,008 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-05-04 17:38:25,662 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 04 May 2025 17:38:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-version', b'2020-10-01'), (b'x-request-id', b'a4028239760946b5288610005c0af06e'), (b'openai-processing-ms', b'572'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=WiTAm1qvYqQsls5SV__jnyI6p5lC6fbi9yGtFV9ccq0-1746380305-1.0.1.1-RZnHZ7aKNX5XGGK2bQb1LVAfYfPzwbYfk6Bu94JLS3QlMyxgKhvOuY9CxNR0xWiQiBuTXPFXm_W_rDcJZY_ZC561WS.SoUJDlMmyeGsZsWc; path=/; expires=Sun, 04-May-25 18:08:25 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=.f7yhTF0_OIt1hgFSdudhZOV5y53cn4VfkIWcW3OnMo-1746380305655-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93a9c58a5cb68123-ORD'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-04 17:38:25,663 - httpx - INFO - HTTP Request: GET https://api.openai.com/v1/models "HTTP/1.1 200 OK"
2025-05-04 17:38:25,663 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-05-04 17:38:25,663 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-05-04 17:38:25,663 - httpcore.http11 - DEBUG - response_closed.started
2025-05-04 17:38:25,663 - httpcore.http11 - DEBUG - response_closed.complete
2025-05-04 17:38:25,664 - openai._base_client - DEBUG - HTTP Response: GET https://api.openai.com/v1/models "200 OK" Headers([('date', 'Sun, 04 May 2025 17:38:25 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('openai-version', '2020-10-01'), ('x-request-id', 'a4028239760946b5288610005c0af06e'), ('openai-processing-ms', '572'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=WiTAm1qvYqQsls5SV__jnyI6p5lC6fbi9yGtFV9ccq0-1746380305-1.0.1.1-RZnHZ7aKNX5XGGK2bQb1LVAfYfPzwbYfk6Bu94JLS3QlMyxgKhvOuY9CxNR0xWiQiBuTXPFXm_W_rDcJZY_ZC561WS.SoUJDlMmyeGsZsWc; path=/; expires=Sun, 04-May-25 18:08:25 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=.f7yhTF0_OIt1hgFSdudhZOV5y53cn4VfkIWcW3OnMo-1746380305655-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '93a9c58a5cb68123-ORD'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-05-04 17:38:25,664 - openai._base_client - DEBUG - request_id: a4028239760946b5288610005c0af06e
2025-05-04 17:38:25,714 - httpcore.connection - DEBUG - close.started
2025-05-04 17:38:25,714 - httpcore.connection - DEBUG - close.complete
2025-05-04 17:38:25,801 - anthropic._base_client - DEBUG - Request options: {'method': 'get', 'url': '/v1/models', 'params': {}, 'post_parser': <function SyncAPIClient._request_api_list.<locals>._parser at 0x7f6137c17380>, 'json_data': None}
2025-05-04 17:38:25,802 - anthropic._base_client - DEBUG - Sending HTTP Request: GET https://api.anthropic.com/v1/models
2025-05-04 17:38:25,803 - httpcore.connection - DEBUG - connect_tcp.started host='api.anthropic.com' port=443 local_address=None timeout=5.0 socket_options=[(1, 9, True), (6, 5, 60), (6, 6, 5), (6, 4, 60)]
2025-05-04 17:38:25,817 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f6137b3e750>
2025-05-04 17:38:25,818 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f6137eb8680> server_hostname='api.anthropic.com' timeout=5.0
2025-05-04 17:38:25,833 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f6137b3e710>
2025-05-04 17:38:25,834 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'GET']>
2025-05-04 17:38:25,834 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-05-04 17:38:25,834 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'GET']>
2025-05-04 17:38:25,834 - httpcore.http11 - DEBUG - send_request_body.complete
2025-05-04 17:38:25,834 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'GET']>
2025-05-04 17:38:25,889 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 04 May 2025 17:38:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'request-id', b'req_011CNnu1qtwfvV7XVc2qTPeM'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'anthropic-organization-id', b'60f7efed-aec7-4c80-ae5b-a741afc057c3'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Robots-Tag', b'none'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93a9c58f78976398-ORD'), (b'Content-Encoding', b'gzip')])
2025-05-04 17:38:25,890 - httpx - INFO - HTTP Request: GET https://api.anthropic.com/v1/models "HTTP/1.1 200 OK"
2025-05-04 17:38:25,890 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'GET']>
2025-05-04 17:38:25,890 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-05-04 17:38:25,890 - httpcore.http11 - DEBUG - response_closed.started
2025-05-04 17:38:25,890 - httpcore.http11 - DEBUG - response_closed.complete
2025-05-04 17:38:25,890 - anthropic._base_client - DEBUG - HTTP Response: GET https://api.anthropic.com/v1/models "200 OK" Headers({'date': 'Sun, 04 May 2025 17:38:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'request-id': 'req_011CNnu1qtwfvV7XVc2qTPeM', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'anthropic-organization-id': '60f7efed-aec7-4c80-ae5b-a741afc057c3', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'x-robots-tag': 'none', 'server': 'cloudflare', 'cf-ray': '93a9c58f78976398-ORD', 'content-encoding': 'gzip'})
2025-05-04 17:38:25,891 - anthropic._base_client - DEBUG - request_id: req_011CNnu1qtwfvV7XVc2qTPeM
================================================================================
✅ APIs configuradas: OpenAI, Anthropic, Gemini
El sistema generará código real utilizando los modelos de IA disponibles.
================================================================================
2025-05-04 17:38:26,009 - httpcore.connection - DEBUG - close.started
2025-05-04 17:38:26,009 - httpcore.connection - DEBUG - close.complete